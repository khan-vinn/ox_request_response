// source: questionary_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.question_response_service.FullQuotaSurveys', null, global);
goog.exportSymbol('proto.question_response_service.GetSurveysRequest', null, global);
goog.exportSymbol('proto.question_response_service.GetSurveysResponse', null, global);
goog.exportSymbol('proto.question_response_service.NewSurveys', null, global);
goog.exportSymbol('proto.question_response_service.UncompletedSurveys', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.question_response_service.GetSurveysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.question_response_service.GetSurveysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.question_response_service.GetSurveysRequest.displayName = 'proto.question_response_service.GetSurveysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.question_response_service.GetSurveysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.question_response_service.GetSurveysResponse.repeatedFields_, null);
};
goog.inherits(proto.question_response_service.GetSurveysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.question_response_service.GetSurveysResponse.displayName = 'proto.question_response_service.GetSurveysResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.question_response_service.FullQuotaSurveys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.question_response_service.FullQuotaSurveys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.question_response_service.FullQuotaSurveys.displayName = 'proto.question_response_service.FullQuotaSurveys';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.question_response_service.UncompletedSurveys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.question_response_service.UncompletedSurveys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.question_response_service.UncompletedSurveys.displayName = 'proto.question_response_service.UncompletedSurveys';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.question_response_service.NewSurveys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.question_response_service.NewSurveys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.question_response_service.NewSurveys.displayName = 'proto.question_response_service.NewSurveys';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.question_response_service.GetSurveysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.question_response_service.GetSurveysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.question_response_service.GetSurveysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.GetSurveysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.question_response_service.GetSurveysRequest}
 */
proto.question_response_service.GetSurveysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.question_response_service.GetSurveysRequest;
  return proto.question_response_service.GetSurveysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.question_response_service.GetSurveysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.question_response_service.GetSurveysRequest}
 */
proto.question_response_service.GetSurveysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.question_response_service.GetSurveysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.question_response_service.GetSurveysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.question_response_service.GetSurveysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.GetSurveysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.question_response_service.GetSurveysRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.question_response_service.GetSurveysRequest} returns this
 */
proto.question_response_service.GetSurveysRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.question_response_service.GetSurveysResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.question_response_service.GetSurveysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.question_response_service.GetSurveysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.question_response_service.GetSurveysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.GetSurveysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    uncompletedSurveysList: jspb.Message.toObjectList(msg.getUncompletedSurveysList(),
    proto.question_response_service.UncompletedSurveys.toObject, includeInstance),
    newSurveysList: jspb.Message.toObjectList(msg.getNewSurveysList(),
    proto.question_response_service.NewSurveys.toObject, includeInstance),
    fullquotaSurveysList: jspb.Message.toObjectList(msg.getFullquotaSurveysList(),
    proto.question_response_service.FullQuotaSurveys.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.question_response_service.GetSurveysResponse}
 */
proto.question_response_service.GetSurveysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.question_response_service.GetSurveysResponse;
  return proto.question_response_service.GetSurveysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.question_response_service.GetSurveysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.question_response_service.GetSurveysResponse}
 */
proto.question_response_service.GetSurveysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.question_response_service.UncompletedSurveys;
      reader.readMessage(value,proto.question_response_service.UncompletedSurveys.deserializeBinaryFromReader);
      msg.addUncompletedSurveys(value);
      break;
    case 2:
      var value = new proto.question_response_service.NewSurveys;
      reader.readMessage(value,proto.question_response_service.NewSurveys.deserializeBinaryFromReader);
      msg.addNewSurveys(value);
      break;
    case 3:
      var value = new proto.question_response_service.FullQuotaSurveys;
      reader.readMessage(value,proto.question_response_service.FullQuotaSurveys.deserializeBinaryFromReader);
      msg.addFullquotaSurveys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.question_response_service.GetSurveysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.question_response_service.GetSurveysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.question_response_service.GetSurveysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.GetSurveysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUncompletedSurveysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.question_response_service.UncompletedSurveys.serializeBinaryToWriter
    );
  }
  f = message.getNewSurveysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.question_response_service.NewSurveys.serializeBinaryToWriter
    );
  }
  f = message.getFullquotaSurveysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.question_response_service.FullQuotaSurveys.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UncompletedSurveys uncompleted_surveys = 1;
 * @return {!Array<!proto.question_response_service.UncompletedSurveys>}
 */
proto.question_response_service.GetSurveysResponse.prototype.getUncompletedSurveysList = function() {
  return /** @type{!Array<!proto.question_response_service.UncompletedSurveys>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.question_response_service.UncompletedSurveys, 1));
};


/**
 * @param {!Array<!proto.question_response_service.UncompletedSurveys>} value
 * @return {!proto.question_response_service.GetSurveysResponse} returns this
*/
proto.question_response_service.GetSurveysResponse.prototype.setUncompletedSurveysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.question_response_service.UncompletedSurveys=} opt_value
 * @param {number=} opt_index
 * @return {!proto.question_response_service.UncompletedSurveys}
 */
proto.question_response_service.GetSurveysResponse.prototype.addUncompletedSurveys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.question_response_service.UncompletedSurveys, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.question_response_service.GetSurveysResponse} returns this
 */
proto.question_response_service.GetSurveysResponse.prototype.clearUncompletedSurveysList = function() {
  return this.setUncompletedSurveysList([]);
};


/**
 * repeated NewSurveys new_surveys = 2;
 * @return {!Array<!proto.question_response_service.NewSurveys>}
 */
proto.question_response_service.GetSurveysResponse.prototype.getNewSurveysList = function() {
  return /** @type{!Array<!proto.question_response_service.NewSurveys>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.question_response_service.NewSurveys, 2));
};


/**
 * @param {!Array<!proto.question_response_service.NewSurveys>} value
 * @return {!proto.question_response_service.GetSurveysResponse} returns this
*/
proto.question_response_service.GetSurveysResponse.prototype.setNewSurveysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.question_response_service.NewSurveys=} opt_value
 * @param {number=} opt_index
 * @return {!proto.question_response_service.NewSurveys}
 */
proto.question_response_service.GetSurveysResponse.prototype.addNewSurveys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.question_response_service.NewSurveys, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.question_response_service.GetSurveysResponse} returns this
 */
proto.question_response_service.GetSurveysResponse.prototype.clearNewSurveysList = function() {
  return this.setNewSurveysList([]);
};


/**
 * repeated FullQuotaSurveys fullquota_surveys = 3;
 * @return {!Array<!proto.question_response_service.FullQuotaSurveys>}
 */
proto.question_response_service.GetSurveysResponse.prototype.getFullquotaSurveysList = function() {
  return /** @type{!Array<!proto.question_response_service.FullQuotaSurveys>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.question_response_service.FullQuotaSurveys, 3));
};


/**
 * @param {!Array<!proto.question_response_service.FullQuotaSurveys>} value
 * @return {!proto.question_response_service.GetSurveysResponse} returns this
*/
proto.question_response_service.GetSurveysResponse.prototype.setFullquotaSurveysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.question_response_service.FullQuotaSurveys=} opt_value
 * @param {number=} opt_index
 * @return {!proto.question_response_service.FullQuotaSurveys}
 */
proto.question_response_service.GetSurveysResponse.prototype.addFullquotaSurveys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.question_response_service.FullQuotaSurveys, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.question_response_service.GetSurveysResponse} returns this
 */
proto.question_response_service.GetSurveysResponse.prototype.clearFullquotaSurveysList = function() {
  return this.setFullquotaSurveysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.question_response_service.FullQuotaSurveys.prototype.toObject = function(opt_includeInstance) {
  return proto.question_response_service.FullQuotaSurveys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.question_response_service.FullQuotaSurveys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.FullQuotaSurveys.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.question_response_service.FullQuotaSurveys}
 */
proto.question_response_service.FullQuotaSurveys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.question_response_service.FullQuotaSurveys;
  return proto.question_response_service.FullQuotaSurveys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.question_response_service.FullQuotaSurveys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.question_response_service.FullQuotaSurveys}
 */
proto.question_response_service.FullQuotaSurveys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.question_response_service.FullQuotaSurveys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.question_response_service.FullQuotaSurveys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.question_response_service.FullQuotaSurveys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.FullQuotaSurveys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.question_response_service.FullQuotaSurveys.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.question_response_service.FullQuotaSurveys} returns this
 */
proto.question_response_service.FullQuotaSurveys.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.question_response_service.UncompletedSurveys.prototype.toObject = function(opt_includeInstance) {
  return proto.question_response_service.UncompletedSurveys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.question_response_service.UncompletedSurveys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.UncompletedSurveys.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.question_response_service.UncompletedSurveys}
 */
proto.question_response_service.UncompletedSurveys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.question_response_service.UncompletedSurveys;
  return proto.question_response_service.UncompletedSurveys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.question_response_service.UncompletedSurveys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.question_response_service.UncompletedSurveys}
 */
proto.question_response_service.UncompletedSurveys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.question_response_service.UncompletedSurveys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.question_response_service.UncompletedSurveys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.question_response_service.UncompletedSurveys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.UncompletedSurveys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.question_response_service.UncompletedSurveys.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.question_response_service.UncompletedSurveys} returns this
 */
proto.question_response_service.UncompletedSurveys.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.question_response_service.NewSurveys.prototype.toObject = function(opt_includeInstance) {
  return proto.question_response_service.NewSurveys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.question_response_service.NewSurveys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.NewSurveys.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.question_response_service.NewSurveys}
 */
proto.question_response_service.NewSurveys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.question_response_service.NewSurveys;
  return proto.question_response_service.NewSurveys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.question_response_service.NewSurveys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.question_response_service.NewSurveys}
 */
proto.question_response_service.NewSurveys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.question_response_service.NewSurveys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.question_response_service.NewSurveys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.question_response_service.NewSurveys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.question_response_service.NewSurveys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.question_response_service.NewSurveys.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.question_response_service.NewSurveys} returns this
 */
proto.question_response_service.NewSurveys.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.question_response_service);
